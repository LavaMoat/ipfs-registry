use std::path::PathBuf;
use thiserror::Error;

/// Errors thrown by the core library.
#[derive(Debug, Error)]
pub enum Error {
    /// Error generated when an archive does not contain
    /// the target file.
    #[error("archive does not contain {0}")]
    NoPackage(PathBuf),

    /// Error generated when a package path is invalid.
    #[error("package path {0} is invalid")]
    InvalidPath(String),

    /// Error generated when an identifier is invalid.
    #[error("identifier {0} is invalid")]
    InvalidIdentifier(String),

    /// Error generated when an `AnyRef` is given and a package is expected.
    #[error("pointer is missing a package component")]
    PackageComponent,

    /// Error generated when an `AnyRef` is given and a version is expected.
    #[error("pointer is missing a version component")]
    VersionComponent,

    /// Error generated by the io module.
    #[error(transparent)]
    Io(#[from] std::io::Error),

    /// Error generated by the JSON library.
    #[error(transparent)]
    Json(#[from] serde_json::Error),

    /// Error generated by the TOML library.
    #[error(transparent)]
    Toml(#[from] toml::de::Error),

    /// Error generated by the CID library.
    #[error(transparent)]
    Cid(#[from] cid::Error),

    /// Error generated by the semver library.
    #[error(transparent)]
    Semver(#[from] semver::Error),
}
